import React, { useEffect, useState } from "react";
import {
    PageSection, Title, PageSectionVariants, Card,
    CardBody, CardTitle, Grid, GridItem, Gallery,
    GalleryItem, Text, TextVariants, Skeleton, Button
} from "@patternfly/react-core";
// import { subscribeToGardenTemperatureEvents,
//     subscribeToGardenHumidityEvents, subscribeToGardenWindEvents,
//     subscribeToGardenStatuses, subscribeToSensorMeasurements
// } from "../services/ParkServerEvents";
import * as ParksService from "@app/services/ParksService";
import * as WeatherService from "@app/services/WeatherService";
import { waitForLiveness } from "../services/LivenessService";
import { Park } from "@app/models/Park";
import { ParkCard } from "./ParkCard";
import { SensorMeasurement } from "@app/models/SensorMeasurement";
import { RecentList } from "@app/models/RecentList";
import { Caption, TableComposable, Tbody, Td, Th, Thead, Tr } from "@patternfly/react-table";
import { ParkEvent } from "@app/models/ParkEvent";

// Icons list: https://patternfly-react.surge.sh/icons/
import TreeIcon from "@patternfly/react-icons/dist/esm/icons/tree-icon";
import CloudSunRainIcon from "@patternfly/react-icons/dist/esm/icons/cloud-sun-rain-icon";
import ThermometerHalfIcon from "@patternfly/react-icons/dist/esm/icons/thermometer-half-icon";
import { WeatherWarning } from "@app/models/WeatherWarning";



export function Dashboard(): JSX.Element {
    const [ready, setReady] = useState<boolean>(false);
    const [parks, setParks] = useState<Park[]>([]);
    const [weatherWarnings, setWeatherWarnings] = useState<WeatherWarning[]>([]);



    useEffect(() => {
        waitForLiveness()
            .then(() => {
                getParks();
                getWeatherWarnings();
                // getGardenEvents();
                // getSensorMeasurements();
                setReady(true);
            });

    }, []);

    async function getParks() {
        const parks = await ParksService.all();

        sortParks(parks);
        setParks(parks);
    }

    async function getWeatherWarnings() {
        const warnings = await WeatherService.all();

        setWeatherWarnings(warnings);
    }

    function sortParks(parks: Park[]) {
        parks.sort((p1, p2) => p1.name.localeCompare(p2.name));
    }

    function simulateWeatherAlerts() {
        
    }


    function renderWeatherWarningsTable() {
        return <TableComposable
            aria-label="Measurements table"
            variant="compact"
            borders={true}>
            <Caption>Real-time measurements produced by garden sensors (garden-sensor-measurements-enriched)</Caption>
            <Thead>
                <Tr>
                    <Th key={0}>City</Th>
                    <Th key={1}>Type</Th>
                    <Th key={2}>Level</Th>
                </Tr>
            </Thead>
            <Tbody>
                {weatherWarnings.map(renderWeatherWarningRow)}
            </Tbody>
        </TableComposable>;
    }

    function renderParksGallery() {
        return <Gallery hasGutter minWidths={{
            md: "300px",
            lg: "300px",
            xl: "400px"
        }}>
            {parks.map(p => <GalleryItem key={p.id}>
                <ParkCard park={p} onParkUpdated={getParks}></ParkCard>
            </GalleryItem>)}
        </Gallery>;
    }

    function renderWeatherWarningRow(w: WeatherWarning) {
        const tableIndex = `${w.city}_${w.level}_${w.type}`;
        return (<Tr key={tableIndex}>
            <Td key={`${tableIndex}_city`} dataLabel="City">
                {w.city}
            </Td>
            <Td key={`${tableIndex}_type`} dataLabel="Type">
                {w.type}
            </Td>
            <Td key={`${tableIndex}_level`} dataLabel="Level">
                {w.level}
            </Td>
        </Tr>);
    }


    return (<React.Fragment>
        <PageSection variant={PageSectionVariants.light}>
            <Title title="Parks" headingLevel="h1" size="lg">
                <TreeIcon size="md" color="#22aa22" />&nbsp;
                Parks&nbsp;
            </Title>
            <Text component={TextVariants.small}>
                General data for each park.
            </Text>
        </PageSection>

        <PageSection variant={PageSectionVariants.light}>
            {ready ? renderParksGallery() : <Skeleton />}
        </PageSection>

        <PageSection >
            <Title headingLevel="h1" size="lg">
                <CloudSunRainIcon size="md" color="#2222aa" />&nbsp;
                Weather Alerts&nbsp;
            </Title>
            <Text component={TextVariants.small}>
                Real-time data processed or generated by the application.
            </Text>
        </PageSection>

        <PageSection>
            <Grid hasGutter>
                <GridItem span={2}>
                    <Card>
                        <CardTitle>
                            <ThermometerHalfIcon />
                            &nbsp;Actions
                        </CardTitle>
                        <CardBody>
                            <Button onClick={simulateWeatherAlerts}>Simulate weather alerts</Button>
                            <br></br>
                            <br></br>
                        </CardBody>
                    </Card>
                </GridItem>
                <GridItem span={10}>

                    <Card>
                        <CardTitle>
                            <ThermometerHalfIcon />
                            Active Weather Alerts
                        </CardTitle>
                        <CardBody>
                            {ready ? renderWeatherWarningsTable() : <Skeleton />}
                        </CardBody>
                    </Card>
                </GridItem>
            </Grid>
        </PageSection>
    </React.Fragment >);
}

