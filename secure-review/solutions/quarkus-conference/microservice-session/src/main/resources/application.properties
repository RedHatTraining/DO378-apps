# datasource configuration
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/conference
%dev.quarkus.http.port=8081
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/conference
quarkus.datasource.jdbc.url = jdbc:postgresql://postgresql:5432/conference
quarkus.datasource.db-kind = postgresql

quarkus.datasource.username = conference_user
quarkus.datasource.password = confi_user

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL10Dialect
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=META-INF/import-test.sql

quarkus.http.cors=true

# Intraservice comms
org.acme.conference.session.SpeakerService/mp-rest/url=https://localhost:8444
org.acme.conference.session.SpeakerService/mp-rest/trustStore=
org.acme.conference.session.SpeakerService/mp-rest/trustStorePassword=
org.acme.conference.session.SpeakerService/mp-rest/keyStore=
org.acme.conference.session.SpeakerService/mp-rest/keyStorePassword=

%prod.org.acme.conference.session.SpeakerService/mp-rest/url=https://speaker:8444


# Feature toggles
features.session-integration=true

# Configure HTTPS with keystore.
quarkus.http.ssl-port=
quarkus.http.ssl.certificate.key-store-file=
quarkus.http.ssl.certificate.key-store-password=

# mTLS configuration
quarkus.http.ssl.certificate.trust-store-file=
quarkus.http.ssl.certificate.trust-store-password=

# Configure Keycloak client
quarkus.oidc.auth-server-url=
quarkus.oidc.client-id=
quarkus.oidc.credentials.secret=